.consultas-container {
    max-width: 1810px;
    margin: 0 auto;
    padding: 50px; 
    position: relative; 
}

.consultas-title {
    text-align: center;
    font-size: 30px;
    font-weight: bold;
    font-family: monospace;
    margin-bottom: 20px;
    color: #020f53b4;
}

.consulta-card {
    background-color: #ffffffb9;
    border-radius: 10px;
    padding: 20px;
    margin-bottom: 20px;
    margin-left: 20px;
    margin-top: 20px;
    box-shadow: 0px 0px 10px rgba(54, 49, 57, 0.657);
    width: calc(25% - 40px);
    min-width: 200px;
    max-width: 250px;
    height: 250px;
    border: 2px solid rgb(255, 255, 255);
    display: inline-block;
    vertical-align: top;
    justify-content: space-around;
    flex-direction: row;
}

.crear-consulta {
    margin-top: 5px;
    padding: 10px 17px;
    font-size: 16px;
    background-color: #0a35649c;
    color: #ffffff; 
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 1s ease;
}

.crear-consulta:hover {
    background-color: #0056b3; 
}

.generar-pdf{
    margin-top: 5px;
    padding: 10px 17px;
    font-size: 16px;
    background-color: #0a35649c;
    color: #ffffff; 
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 1s ease;
}
.generar-pdf:hover {
    background-color: #0056b3; 
}

.consulta-card p {
    margin: 5px 0;
    font-size: 14px;
    font-family: Arial, sans-serif;
}

.consulta-card h3 {
    margin: 0;
    font-family: Arial, sans-serif;
}

.consultas-container::before {
    content: '';/*  */
    position: absolute;
    top: 0;
    left: 0;
    width: 115rem;
    height: 56.5rem;
    background-image: url('../img/imgconsultas.jpeg');  
    background-size: cover;  
    background-position: center; 
    /* background-repeat: no-repeat;  */
    opacity: 1; 
    z-index: -1; 
    filter: blur(9.1px); 
}
/* Estilos para el formulario */
.form-group {
    margin-bottom: 20px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
}

textarea {
    width: 100%;
    height: 100px; /* Ajusta la altura según sea necesario */
}

/* Estilos para la tabla */
table {
    border-collapse: collapse;
    width: 100%;
    border: 1px solid #ddd;
  }
  
  th, td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
  }
  
  th {
    background-color: #77dd77;
    color: #fff;
  }
  
  tr:nth-child(even) {
    background-color: #f2f2f2;
  }
  
  tbody tr:hover {
    background-color: #ddd;
  }
  
  input {
    width: 100%;
    height: 100%;
    border: 1px solid #ddd;
    padding: 0;
  }
  



/* const handleGeneratePDF = () => {
    const doc = new jsPDF();
    const lineHeight = 7;
    const pageHeight = doc.internal.pageSize.height;
    const pageWidth = doc.internal.pageSize.width;
    let y = 10;
    const logo = new Image();
    doc.setFontSize(20);
    doc.text('Historias Clínicas', pageWidth / 2, 20, { align: 'center', color: 'blue' });
    logo.onload = function() {
        const logoWidth = 40; 
        const logoHeight = (logo.width * logoWidth) / logo.height; 
        const logoX = pageWidth - logoWidth - 10; 
        const logoY = 247;
        doc.addImage(logo, 'JPEG', logoX, logoY, logoWidth, logoHeight);
        consultas.forEach((consulta, index) => {
            if (index > 0) {
                doc.addPage();
            }
            const data = [
                `Cedula: ${consulta.paciente_id}`,
                `Fecha y Hora: ${new Date(consulta.fecha_hora).toLocaleString()}`,
                `Motivo de Consulta: ${consulta.motivo_consulta}`,
                `Síntomas: ${consulta.sintomas}`,
                `Diagnóstico: ${consulta.diagnostico}`,
                `Tratamiento: ${consulta.tratamiento}`,
            ];
            let consultaY = pageHeight / 3;
            doc.setLineWidth(0.5);
            doc.rect(10, 10, pageWidth - 20, pageHeight - 20); 
            doc.line(10, pageHeight / 5, pageWidth - 10, pageHeight / 5); 
            doc.line(10, pageHeight / 12, pageWidth - 10, pageHeight / 12); 

            
            doc.setFontSize(15);
            doc.setFont('helvetica', 'bold');
            doc.text(`Historia Clínica ${index + 1}`, pageWidth / 2, 30, { align: 'center' });
            
            data.forEach(line => {
                doc.text(line, pageWidth / 2, consultaY, { align: 'center' });
                consultaY += lineHeight; 
            });
            
        });
        doc.save('historias_clinicas.pdf');
    };
    logo.onerror = function() {
        console.error('Error al cargar la imagen del logo.');
    };
    logo.src = logoImg;
}; */





/* 

    const handleGeneratePDF = () => {
        const doc = new jsPDF();
        const lineHeight = 7;
        const pageHeight = doc.internal.pageSize.height;
        const pageWidth = doc.internal.pageSize.width;
        const logo = new Image();

          
          logo.onerror = function() {
            console.error('Error al cargar la imagen del logo.');
          };
    
        doc.setFontSize();
        doc.text('Historias Clínicas', pageWidth / 2, 20, { align: 'center', color: 'blue' });
        logo.onload = function() {
            const data = [
                { label: 'Cedula:', value: consultaData.paciente_id },
                { label: 'Fecha y Hora:', value: consultaData.fecha_hora },
                { label: 'Motivo de Consulta:', value: consultaData.motivo_consulta },
                { label: 'Síntomas:', value: consultaData.sintomas },
                { label: 'Diagnóstico:', value: consultaData.diagnostico },
                { label: 'Tratamiento:', value: consultaData.tratamiento },
                { label: 'Informacion Laboratorio:', value: consultaData.labData.map(row => row.join(', ')) },
            ];

            let consultaY = pageHeight / 3;

            doc.setLineWidth(0.5);
            doc.rect(10, 10, pageWidth - 20, pageHeight - 20); 
            doc.line(10, pageHeight / 5, pageWidth - 10, pageHeight / 5); 
            doc.line(10, pageHeight / 12, pageWidth - 10, pageHeight / 12); 

            doc.setFontSize(12);
            doc.setFont('helvetica', 'bold');
            doc.text(`Historia Clínica`, pageWidth / 2, 30, { align: 'center' });

            data.forEach(({ label, value }, i) => {
                doc.setFont('helvetica', 'bold');
                doc.text(label, 20, consultaY); 
                doc.setFont('helvetica', 'normal');
                doc.text(value, 50, consultaY); 
                consultaY += lineHeight; 
            });

            const logoWidth = 40; 
            const logoHeight = (logo.width * logoWidth) / logo.height; 
            const logoX = pageWidth - logoWidth - 10; 
            const logoY = 247;
            doc.addImage(logo, 'JPEG', logoX, logoY, logoWidth, logoHeight);

            doc.save('historias_clinicas.pdf');
        };

        logo.onerror = function() {
            console.error('Error al cargar la imagen del logo.');
        };

        logo.src = logoImg;
    };

    return (
        <div className="consultas-container">
            <h2 className="consultas-title">Listado de Consultas</h2>
            <div style={{display: "flex", flexDirection: "row", gap: "1rem"}}>
                <button className="crear-consulta" onClick={handleCreateConsulta}>Crear Consulta</button>
                <button className="generar-pdf" onClick={handleGeneratePDF}>Generar PDF</button>
            </div>
            {showModal && (
                <div className="modal">
                    <div className="modal-content">
                        <span className="close" onClick={handleCloseModal}>&times;</span>
                        <h2>Crear Nueva Consulta</h2>
                        <form onSubmit={handleSubmit}>
                            <div className="form-group">
                                <label htmlFor="paciente_id">Cedula</label>
                                <input
                                    required
                                    type="text"
                                    id="paciente_id"
                                    name="paciente_id"
                                    value={consultaData.paciente_id}
                                    onChange={handleChange}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="fecha_hora"> Fecha_hora:</label>
                                <input
                                    required
                                    type="text"
                                    id="fecha_hora"
                                    name="fecha_hora"
                                    value={consultaData.fecha_hora}
                                    onChange={handleChange}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="motivo_consulta">Motivo de Consulta:</label>
                                <input
                                    required
                                    type="text"
                                    id="motivo_consulta"
                                    name="motivo_consulta"
                                    value={consultaData.motivo_consulta}
                                    onChange={handleChange}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="sintomas">Síntomas:</label>
                                <input
                                    required
                                    type="text"
                                    id="sintomas"
                                    name="sintomas"
                                    value={consultaData.sintomas}
                                    onChange={handleChange}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="diagnostico">Diagnóstico:</label>
                                <input
                                    required
                                    type="text"
                                    id="diagnostico"
                                    name="diagnostico"
                                    value={consultaData.diagnostico}
                                    onChange={handleChange}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="tratamiento">Tratamiento:</label>
                                <input
                                    required
                                    type="text"
                                    id="tratamiento"
                                    name="tratamiento"
                                    value={consultaData.tratamiento}
                                    onChange={handleChange}
                                />
                            </div>
                            <div className="form-group">
                                <label htmlFor="informacion_laboratorio">Información del Laboratorio:</label>
                                <table>
                                    <thead>
                                        <tr>
                                            <th>A</th>
                                            <th>B</th>
                                            <th>C</th>
                                            <th>D</th>
                                            <th>E</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {consultaData.labData.map((row, rowIndex) => (
                                            <tr key={rowIndex}>
                                                {row.map((col, colIndex) => (
                                                    <td key={colIndex}>
                                                        <input
                                                            type="text"
                                                            value={consultaData.labData[rowIndex][colIndex]}
                                                            onChange={(e) => handleLabDataChange(e, rowIndex, colIndex)}
                                                        />
                                                    </td>
                                                ))}
                                            </tr>
                                        ))}
                                    </tbody>
                                </table>
                            </div>
                            <button className="boton" type="submit">Crear Consu-lta</button>
                        </form>
                    </div>
                </div>
            )}
            <ul>
                {consultas.map((consulta, index) => (
                    <li key={index} className="consulta-card">
                        <p>Cedula: {consulta.paciente_id}</p>
                        <p>Fecha y Hora: {consulta.fecha_hora}</p>
                        <p>Motivo de consulta: {consulta.motivo_consulta}</p>
                        <p>Síntomas: {consulta.sintomas}</p>
                        <p>Diagnóstico: {consulta.diagnostico}</p>
                        <p>Tratamiento: {consulta.tratamiento}</p>
                        <p>Información del Laboratorio: {consulta.labData.map(row => row.join(', '))}</p>
                        <hr />
                    </li>
                ))}
            </ul>
        </div>
    );
};

export default ConsultasList;
 */